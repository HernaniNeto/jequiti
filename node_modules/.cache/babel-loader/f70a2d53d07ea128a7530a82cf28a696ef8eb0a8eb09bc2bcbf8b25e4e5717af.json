{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hernani McFly\\\\Desktop\\\\secretword\\\\secret\\\\word\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// css\nimport './App.css';\n\n// react\nimport { useCallback, useEffect, useState } from 'react';\n\n// data\nimport { wordList, wordsList } from './data/words';\n\n// components\nimport StartScreen from './components/StartScreen';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = [{\n  id: 1,\n  name: 'start'\n}, {\n  id: 2,\n  name: 'game'\n}, {\n  id: 3,\n  name: 'end'\n}];\nfunction App() {\n  _s();\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n  const [pickedWord, setPickedWord] = useState('');\n  const [pickedCategory, setPickedCategory] = useState('');\n  const [letters, setLetters] = useState([]);\n  const pickWordAndCategory = () => {\n    // pick a random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];\n    console.log(category);\n\n    // pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n    console.log(word);\n    return [word, category];\n  };\n\n  // starts the secret word game\n  const startGame = () => {\n    // pick word and pick category\n    const {\n      word,\n      category\n    } = pickWordAndCategory();\n    setGameStage(stages[1].name);\n  };\n\n  // process the letter input\n  const verifyLetter = () => {\n    setGameStage(stages[2].name);\n  };\n\n  // restarts the game\n  const retry = () => {\n    setGameStage(stages[0].name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStage === 'start' && /*#__PURE__*/_jsxDEV(StartScreen, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }, this), gameStage === 'game' && /*#__PURE__*/_jsxDEV(Game, {\n      verifyLetter: verifyLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }, this), gameStage === 'end' && /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p7TM9V+/BcM8x4eCtqNlwg3nR4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useState","wordList","wordsList","StartScreen","Game","GameOver","jsxDEV","_jsxDEV","stages","id","name","App","_s","gameStage","setGameStage","words","pickedWord","setPickedWord","pickedCategory","setPickedCategory","letters","setLetters","pickWordAndCategory","categories","Object","keys","category","Math","floor","random","length","console","log","word","startGame","verifyLetter","retry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hernani McFly/Desktop/secretword/secret/word/src/App.js"],"sourcesContent":["// css\nimport './App.css'\n\n// react\nimport { useCallback, useEffect, useState } from 'react'\n\n// data\nimport { wordList, wordsList } from './data/words'\n\n// components\nimport StartScreen from './components/StartScreen'\nimport Game from './components/Game'\nimport GameOver from './components/GameOver'\n\nconst stages = [\n  { id: 1, name: 'start' },\n  { id: 2, name: 'game' },\n  { id: 3, name: 'end' }\n]\n\nfunction App() {\n  const [gameStage, setGameStage] = useState(stages[0].name)\n  const [words] = useState(wordsList)\n\n  const [pickedWord, setPickedWord] = useState('')\n  const [pickedCategory, setPickedCategory] = useState('')\n  const [letters, setLetters] = useState([])\n\n  const pickWordAndCategory = () => {\n    // pick a random category\n    const categories = Object.keys(words)\n    const category =\n      categories[Math.floor(Math.random() * Object.keys(categories).length)]\n\n    console.log(category)\n\n    // pick a random word\n    const word =\n      words[category][Math.floor(Math.random() * words[category].length)]\n\n    console.log(word)\n\n    return [word, category]\n  }\n\n  // starts the secret word game\n  const startGame = () => {\n    // pick word and pick category\n    const { word, category } = pickWordAndCategory()\n\n    setGameStage(stages[1].name)\n  }\n\n  // process the letter input\n  const verifyLetter = () => {\n    setGameStage(stages[2].name)\n  }\n\n  // restarts the game\n  const retry = () => {\n    setGameStage(stages[0].name)\n  }\n\n  return (\n    <div className=\"App\">\n      {gameStage === 'start' && <StartScreen startGame={startGame} />}\n      {gameStage === 'game' && <Game verifyLetter={verifyLetter} />}\n      {gameStage === 'end' && <GameOver />}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}